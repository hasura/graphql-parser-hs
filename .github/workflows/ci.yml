name: ci

on:
  push: { branches: [ "main" ] }
  pull_request: { branches: [ "main" ] }

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      # TODO: We should add CI-specific build, test, etc. actions to the
      # 'Makefile' rather than relying on an environment variable.
      CABAL: cabal --project-file=./ci/ci.project
    strategy:
      matrix:
        ghc: [ "8.10.7", "9.0.2", "9.2.2"  ]
        cabal: [ "latest" ] 

    steps:
      - name: Checkout this repository.
        uses: actions/checkout@v2

      - name: Set up Haskell tooling.
        uses: haskell/actions/setup@v1
        id: set-up-haskell-tooling
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Cache compiled dependency artifacts.
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.set-up-haskell-tooling.outputs.cabal-store }}
          key: ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles('./ci/${{ matrix.ghc }}/ci.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles('./ci/${{ matrix.ghc }}/ci.project.freeze') }}

      - name: Compile dependencies.
        run: |
          make update \
            PROJECT='ci/${{ matrix.ghc }}/ci.project'
          make build-deps \
            PROJECT='ci/${{ matrix.ghc }}/ci.project'

      - name: Compile library, tests, and benchmarks.
        run: |
          make build-all \
            PROJECT='ci/${{ matrix.ghc }}/ci.project'

      - name: Run tests.
        run: |
          make test-all \
            PROJECT='ci/${{ matrix.ghc }}/ci.project'

      - name: Run benchmarks.
        run: |
          make bench-all \
            PROJECT='ci/${{ matrix.ghc }}/ci.project'
